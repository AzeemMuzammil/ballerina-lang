/*
 *  Copyright (c) 2022, WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

apply from: "$rootDir/gradle/javaProject.gradle"
apply from: "$rootDir/gradle/ballerinaLangLibLoad.gradle"

configurations {
    compile.transitive = false
    compileClasspath.extendsFrom(compileOnly)
}

dependencies {
    compileOnly project(':ballerina-parser')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-tools-api')
    implementation "com.google.code.gson:gson:${project.gsonVersion}"

//    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j'
//    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc'
    implementation 'org.slf4j:slf4j-jdk14'
    implementation ('org.eclipse.lsp4j:org.eclipse.lsp4j:0.12.0}') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation ('org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.12.0') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    testImplementation project(path: ':language-server:language-server-commons')

    testCompile 'org.testng:testng'

}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

description = 'Model generator core for project design diagram generation'

ext.moduleName = 'io.ballerina.architecturemodelgenerator'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
